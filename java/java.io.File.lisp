;;; -*- Mode : lisp -*-
;;; This file was automatically generated by WRITE-JAVA-CLASS-DEFINITIONS-TO-FILE


;;; Definitions for Java class   java.io.File 


(eval-when (compile load eval)
  (let ((package-name "java.io"))
    (unless (find-package package-name) (make-package package-name)))
  (lw-ji:intern-and-export-list '("*FILE.SEPARATORCHAR*"
                                  "FILE.SEPARATORCHAR"
                                  "*FILE.SEPARATOR*"
                                  "FILE.SEPARATOR"
                                  "*FILE.PATHSEPARATORCHAR*"
                                  "FILE.PATHSEPARATORCHAR"
                                  "*FILE.PATHSEPARATOR*"
                                  "FILE.PATHSEPARATOR"
                                  "FILE.TOURL"
                                  "FILE.GETABSOLUTEFILE"
                                  "FILE.GETABSOLUTEPATH"
                                  "FILE.COMPARETO"
                                  "FILE.TOPATH"
                                  "FILE.ISDIRECTORY"
                                  "FILE.TOURI"
                                  "FILE.LISTFILES"
                                  "FILE.GETPATH"
                                  "FILE.GETPARENTFILE"
                                  "FILE.SETREADONLY"
                                  "FILE.NOTIFYALL"
                                  "FILE.DELETE"
                                  "FILE.GETCANONICALFILE"
                                  "FILE.LIST"
                                  "FILE.EXISTS"
                                  "FILE.SETLASTMODIFIED"
                                  "FILE.CREATETEMPFILE"
                                  "FILE.LENGTH"
                                  "FILE.ISABSOLUTE"
                                  "FILE.MKDIR"
                                  "FILE.CANREAD"
                                  "FILE.GETNAME"
                                  "FILE.GETCANONICALPATH"
                                  "FILE.HASHCODE"
                                  "FILE.NOTIFY"
                                  "FILE.GETFREESPACE"
                                  "FILE.RENAMETO"
                                  "FILE.WAIT"
                                  "FILE.GETCLASS"
                                  "FILE.GETTOTALSPACE"
                                  "FILE.EQUALS"
                                  "FILE.MKDIRS"
                                  "FILE.SETEXECUTABLE"
                                  "FILE.GETPARENT"
                                  "FILE.CANWRITE"
                                  "FILE.SETREADABLE"
                                  "FILE.DELETEONEXIT"
                                  "FILE.CANEXECUTE"
                                  "FILE.GETUSABLESPACE"
                                  "FILE.ISHIDDEN"
                                  "FILE.TOSTRING"
                                  "FILE.SETWRITABLE"
                                  "FILE.ISFILE"
                                  "FILE.LASTMODIFIED"
                                  "FILE.LISTROOTS"
                                  "FILE.CREATENEWFILE"
                                  "FILE.NEW"
                                  "FILE.")
                                "java.io"))

(in-package "java.io")
(defconstant file. "java.io.File")
(lw-ji:record-java-class-lisp-symbol "java.io.File" 'file.)
(lw-ji:define-java-constructor file.new
                               "java.io.File"
                               :signatures
                               ("java.io.File(java.net.URI)"
                                "java.io.File(java.io.File,java.lang.String)"
                                "java.io.File(java.lang.String)"
                                "java.io.File(java.lang.String,java.lang.String)")
                               :class-symbol
                               nil)
(lw-ji:define-java-caller file.tourl
                          "java/io/File"
                          "toURL"
                          :signatures
                          ("public java.net.URL toURL()"))
(lw-ji:define-java-caller file.getabsolutefile
                          "java/io/File"
                          "getAbsoluteFile"
                          :signatures
                          ("public java.io.File getAbsoluteFile()"))
(lw-ji:define-java-caller file.getabsolutepath
                          "java/io/File"
                          "getAbsolutePath"
                          :signatures
                          ("public java.lang.String getAbsolutePath()"))
(lw-ji:define-java-caller file.compareto
                          "java/io/File"
                          "compareTo"
                          :signatures
                          ("public int compareTo(java.io.File)"
                           "public int compareTo(java.lang.Object)"))
(lw-ji:define-java-caller file.topath
                          "java/io/File"
                          "toPath"
                          :signatures
                          ("public java.nio.file.Path toPath()"))
(lw-ji:define-java-caller file.isdirectory
                          "java/io/File"
                          "isDirectory"
                          :signatures
                          ("public boolean isDirectory()"))
(lw-ji:define-java-caller file.touri
                          "java/io/File"
                          "toURI"
                          :signatures
                          ("public java.net.URI toURI()"))
(lw-ji:define-java-caller file.listfiles
                          "java/io/File"
                          "listFiles"
                          :signatures
                          ("public java.io.File[] listFiles(java.io.FileFilter)"
                           "public java.io.File[] listFiles(java.io.FilenameFilter)"
                           "public java.io.File[] listFiles()"))
(lw-ji:define-java-caller file.getpath
                          "java/io/File"
                          "getPath"
                          :signatures
                          ("public java.lang.String getPath()"))
(lw-ji:define-java-caller file.getparentfile
                          "java/io/File"
                          "getParentFile"
                          :signatures
                          ("public java.io.File getParentFile()"))
(lw-ji:define-java-caller file.setreadonly
                          "java/io/File"
                          "setReadOnly"
                          :signatures
                          ("public boolean setReadOnly()"))
(lw-ji:define-java-caller file.notifyall
                          "java/io/File"
                          "notifyAll"
                          :signatures
                          ("public final void notifyAll()"))
(lw-ji:define-java-caller file.delete
                          "java/io/File"
                          "delete"
                          :signatures
                          ("public boolean delete()"))
(lw-ji:define-java-caller file.getcanonicalfile
                          "java/io/File"
                          "getCanonicalFile"
                          :signatures
                          ("public java.io.File getCanonicalFile()"))
(lw-ji:define-java-caller file.list
                          "java/io/File"
                          "list"
                          :signatures
                          ("public java.lang.String[] list(java.io.FilenameFilter)"
                           "public java.lang.String[] list()"))
(lw-ji:define-java-caller file.exists
                          "java/io/File"
                          "exists"
                          :signatures
                          ("public boolean exists()"))
(lw-ji:define-java-caller file.setlastmodified
                          "java/io/File"
                          "setLastModified"
                          :signatures
                          ("public boolean setLastModified(long)"))
(lw-ji:define-java-caller file.createtempfile
                          "java/io/File"
                          "createTempFile"
                          :signatures
                          ("public static java.io.File createTempFile(java.lang.String, java.lang.String)"
                           "public static java.io.File createTempFile(java.lang.String, java.lang.String, java.io.File)"))
(lw-ji:define-java-caller file.length
                          "java/io/File"
                          "length"
                          :signatures
                          ("public long length()"))
(lw-ji:define-java-caller file.isabsolute
                          "java/io/File"
                          "isAbsolute"
                          :signatures
                          ("public boolean isAbsolute()"))
(lw-ji:define-java-caller file.mkdir
                          "java/io/File"
                          "mkdir"
                          :signatures
                          ("public boolean mkdir()"))
(lw-ji:define-java-caller file.canread
                          "java/io/File"
                          "canRead"
                          :signatures
                          ("public boolean canRead()"))
(lw-ji:define-java-caller file.getname
                          "java/io/File"
                          "getName"
                          :signatures
                          ("public java.lang.String getName()"))
(lw-ji:define-java-caller file.getcanonicalpath
                          "java/io/File"
                          "getCanonicalPath"
                          :signatures
                          ("public java.lang.String getCanonicalPath()"))
(lw-ji:define-java-caller file.hashcode
                          "java/io/File"
                          "hashCode"
                          :signatures
                          ("public int hashCode()"))
(lw-ji:define-java-caller file.notify
                          "java/io/File"
                          "notify"
                          :signatures
                          ("public final void notify()"))
(lw-ji:define-java-caller file.getfreespace
                          "java/io/File"
                          "getFreeSpace"
                          :signatures
                          ("public long getFreeSpace()"))
(lw-ji:define-java-caller file.renameto
                          "java/io/File"
                          "renameTo"
                          :signatures
                          ("public boolean renameTo(java.io.File)"))
(lw-ji:define-java-caller file.wait
                          "java/io/File"
                          "wait"
                          :signatures
                          ("public final void wait(long)"
                           "public final void wait(long, int)"
                           "public final void wait()"))
(lw-ji:define-java-caller file.getclass
                          "java/io/File"
                          "getClass"
                          :signatures
                          ("public final java.lang.Class getClass()"))
(lw-ji:define-java-caller file.gettotalspace
                          "java/io/File"
                          "getTotalSpace"
                          :signatures
                          ("public long getTotalSpace()"))
(lw-ji:define-java-caller file.equals
                          "java/io/File"
                          "equals"
                          :signatures
                          ("public boolean equals(java.lang.Object)"))
(lw-ji:define-java-caller file.mkdirs
                          "java/io/File"
                          "mkdirs"
                          :signatures
                          ("public boolean mkdirs()"))
(lw-ji:define-java-caller file.setexecutable
                          "java/io/File"
                          "setExecutable"
                          :signatures
                          ("public boolean setExecutable(boolean)"
                           "public boolean setExecutable(boolean, boolean)"))
(lw-ji:define-java-caller file.getparent
                          "java/io/File"
                          "getParent"
                          :signatures
                          ("public java.lang.String getParent()"))
(lw-ji:define-java-caller file.canwrite
                          "java/io/File"
                          "canWrite"
                          :signatures
                          ("public boolean canWrite()"))
(lw-ji:define-java-caller file.setreadable
                          "java/io/File"
                          "setReadable"
                          :signatures
                          ("public boolean setReadable(boolean)"
                           "public boolean setReadable(boolean, boolean)"))
(lw-ji:define-java-caller file.deleteonexit
                          "java/io/File"
                          "deleteOnExit"
                          :signatures
                          ("public void deleteOnExit()"))
(lw-ji:define-java-caller file.canexecute
                          "java/io/File"
                          "canExecute"
                          :signatures
                          ("public boolean canExecute()"))
(lw-ji:define-java-caller file.getusablespace
                          "java/io/File"
                          "getUsableSpace"
                          :signatures
                          ("public long getUsableSpace()"))
(lw-ji:define-java-caller file.ishidden
                          "java/io/File"
                          "isHidden"
                          :signatures
                          ("public boolean isHidden()"))
(lw-ji:define-java-caller file.tostring
                          "java/io/File"
                          "toString"
                          :signatures
                          ("public java.lang.String toString()"))
(lw-ji:define-java-caller file.setwritable
                          "java/io/File"
                          "setWritable"
                          :signatures
                          ("public boolean setWritable(boolean)"
                           "public boolean setWritable(boolean, boolean)"))
(lw-ji:define-java-caller file.isfile
                          "java/io/File"
                          "isFile"
                          :signatures
                          ("public boolean isFile()"))
(lw-ji:define-java-caller file.lastmodified
                          "java/io/File"
                          "lastModified"
                          :signatures
                          ("public long lastModified()"))
(lw-ji:define-java-caller file.listroots
                          "java/io/File"
                          "listRoots"
                          :signatures
                          ("public static java.io.File[] listRoots()"))
(lw-ji:define-java-caller file.createnewfile
                          "java/io/File"
                          "createNewFile"
                          :signatures
                          ("public boolean createNewFile()"))
(lw-ji:define-field-accessor file.separatorchar
                             "java/io/File"
                             "separatorChar"
                             t
                             t)
(define-symbol-macro *file.separatorchar* (file.separatorchar))
(lw-ji:define-field-accessor file.separator
                             "java/io/File"
                             "separator"
                             t
                             t)
(define-symbol-macro *file.separator* (file.separator))
(lw-ji:define-field-accessor file.pathseparatorchar
                             "java/io/File"
                             "pathSeparatorChar"
                             t
                             t)
(define-symbol-macro *file.pathseparatorchar* (file.pathseparatorchar))
(lw-ji:define-field-accessor file.pathseparator
                             "java/io/File"
                             "pathSeparator"
                             t
                             t)
(define-symbol-macro *file.pathseparator* (file.pathseparator))

;;; End of class   java.io.File 

