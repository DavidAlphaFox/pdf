;;; -*- Mode : lisp -*-
;;; This file was automatically generated by WRITE-JAVA-CLASS-DEFINITIONS-TO-FILE


;;; Definitions for Java class   com.itextpdf.kernel.pdf.PdfDocument 


(eval-when (compile load eval)
  (let ((package-name "com.itextpdf.kernel.pdf"))
    (unless (find-package package-name) (make-package package-name)))
  (lw-ji:intern-and-export-list '("PDFDOCUMENT.ISCLOSED"
                                  "PDFDOCUMENT.GETENCRYPTEDPAYLOADDOCUMENT"
                                  "PDFDOCUMENT.ADDASSOCIATEDFILE"
                                  "PDFDOCUMENT.CHECKISOCONFORMANCE"
                                  "PDFDOCUMENT.GETCATALOG"
                                  "PDFDOCUMENT.CLOSE"
                                  "PDFDOCUMENT.SETUSERPROPERTIES"
                                  "PDFDOCUMENT.GETFINGERPRINT"
                                  "PDFDOCUMENT.REMOVEALLHANDLERS"
                                  "PDFDOCUMENT.GETNUMBEROFPDFOBJECTS"
                                  "PDFDOCUMENT.GETDOCUMENTINFO"
                                  "PDFDOCUMENT.NOTIFYALL"
                                  "PDFDOCUMENT.HASEVENTHANDLER"
                                  "PDFDOCUMENT.FLUSHCOPIEDOBJECTS"
                                  "PDFDOCUMENT.GETPAGELABELS"
                                  "PDFDOCUMENT.ADDPAGE"
                                  "PDFDOCUMENT.GETFIRSTPAGE"
                                  "PDFDOCUMENT.ADDFILEATTACHMENT"
                                  "PDFDOCUMENT.ADDNAMEDDESTINATION"
                                  "PDFDOCUMENT.ADDOUTPUTINTENT"
                                  "PDFDOCUMENT.GETTRAILER"
                                  "PDFDOCUMENT.GETORIGINALDOCUMENTID"
                                  "PDFDOCUMENT.ADDEVENTHANDLER"
                                  "PDFDOCUMENT.GETSTRUCTTREEROOT"
                                  "PDFDOCUMENT.CHECKSHOWTEXTISOCONFORMANCE"
                                  "PDFDOCUMENT.HASHCODE"
                                  "PDFDOCUMENT.GETWRITER"
                                  "PDFDOCUMENT.DISPATCHEVENT"
                                  "PDFDOCUMENT.GETPDFVERSION"
                                  "PDFDOCUMENT.NOTIFY"
                                  "PDFDOCUMENT.GETDEFAULTFONT"
                                  "PDFDOCUMENT.WAIT"
                                  "PDFDOCUMENT.GETPAGENUMBER"
                                  "PDFDOCUMENT.GETCLASS"
                                  "PDFDOCUMENT.GETPDFOBJECT"
                                  "PDFDOCUMENT.GETXMPMETADATA"
                                  "PDFDOCUMENT.GETLASTPAGE"
                                  "PDFDOCUMENT.EQUALS"
                                  "PDFDOCUMENT.CREATENEXTINDIRECTREFERENCE"
                                  "PDFDOCUMENT.ADDNEWPAGE"
                                  "PDFDOCUMENT.COPYPAGESTO"
                                  "PDFDOCUMENT.HASOUTLINES"
                                  "PDFDOCUMENT.GETFONT"
                                  "PDFDOCUMENT.GETNUMBEROFPAGES"
                                  "PDFDOCUMENT.FINDFONT"
                                  "PDFDOCUMENT.GETMODIFIEDDOCUMENTID"
                                  "PDFDOCUMENT.GETPAGE"
                                  "PDFDOCUMENT.GETNEXTSTRUCTPARENTINDEX"
                                  "PDFDOCUMENT.ISAPPENDMODE"
                                  "PDFDOCUMENT.SETENCRYPTEDPAYLOAD"
                                  "PDFDOCUMENT.LISTINDIRECTREFERENCES"
                                  "PDFDOCUMENT.REGISTERPRODUCT"
                                  "PDFDOCUMENT.SETCLOSEREADER"
                                  "PDFDOCUMENT.INITIALIZEOUTLINES"
                                  "PDFDOCUMENT.ISTAGGED"
                                  "PDFDOCUMENT.SETCLOSEWRITER"
                                  "PDFDOCUMENT.SETFLUSHUNUSEDOBJECTS"
                                  "PDFDOCUMENT.SETTAGGED"
                                  "PDFDOCUMENT.GETOUTLINES"
                                  "PDFDOCUMENT.GETREADER"
                                  "PDFDOCUMENT.SETDEFAULTPAGESIZE"
                                  "PDFDOCUMENT.GETTAGSTRUCTURECONTEXT"
                                  "PDFDOCUMENT.REMOVEEVENTHANDLER"
                                  "PDFDOCUMENT.SETXMPMETADATA"
                                  "PDFDOCUMENT.REMOVEPAGE"
                                  "PDFDOCUMENT.GETDEFAULTPAGESIZE"
                                  "PDFDOCUMENT.TOSTRING"
                                  "PDFDOCUMENT.ISCLOSEREADER"
                                  "PDFDOCUMENT.MOVEPAGE"
                                  "PDFDOCUMENT.ISCLOSEWRITER"
                                  "PDFDOCUMENT.GETASSOCIATEDFILES"
                                  "PDFDOCUMENT.ISFLUSHUNUSEDOBJECTS"
                                  "PDFDOCUMENT.ADDFONT"
                                  "PDFDOCUMENT.NEW"
                                  "PDFDOCUMENT.")
                                "com.itextpdf.kernel.pdf"))

(in-package "com.itextpdf.kernel.pdf")
(defconstant pdfdocument. "com.itextpdf.kernel.pdf.PdfDocument")
(lw-ji:record-java-class-lisp-symbol "com.itextpdf.kernel.pdf.PdfDocument"
                                     'pdfdocument.)
(lw-ji:define-java-constructor pdfdocument.new
                               "com.itextpdf.kernel.pdf.PdfDocument"
                               :signatures
                               ("com.itextpdf.kernel.pdf.PdfDocument(com.itextpdf.kernel.pdf.PdfWriter)"
                                "com.itextpdf.kernel.pdf.PdfDocument(com.itextpdf.kernel.pdf.PdfReader,com.itextpdf.kernel.pdf.DocumentProperties)"
                                "com.itextpdf.kernel.pdf.PdfDocument(com.itextpdf.kernel.pdf.PdfReader)"
                                "com.itextpdf.kernel.pdf.PdfDocument(com.itextpdf.kernel.pdf.PdfWriter,com.itextpdf.kernel.pdf.DocumentProperties)"
                                "com.itextpdf.kernel.pdf.PdfDocument(com.itextpdf.kernel.pdf.PdfReader,com.itextpdf.kernel.pdf.PdfWriter)"
                                "com.itextpdf.kernel.pdf.PdfDocument(com.itextpdf.kernel.pdf.PdfReader,com.itextpdf.kernel.pdf.PdfWriter,com.itextpdf.kernel.pdf.StampingProperties)")
                               :class-symbol
                               nil)
(lw-ji:define-java-caller pdfdocument.isclosed
                          "com/itextpdf/kernel/pdf/PdfDocument"
                          "isClosed"
                          :signatures
                          ("public boolean isClosed()"))
(lw-ji:define-java-caller pdfdocument.getencryptedpayloaddocument
                          "com/itextpdf/kernel/pdf/PdfDocument"
                          "getEncryptedPayloadDocument"
                          :signatures
                          ("public com.itextpdf.kernel.pdf.PdfEncryptedPayloadDocument getEncryptedPayloadDocument()"))
(lw-ji:define-java-caller pdfdocument.addassociatedfile
                          "com/itextpdf/kernel/pdf/PdfDocument"
                          "addAssociatedFile"
                          :signatures
                          ("public void addAssociatedFile(java.lang.String, com.itextpdf.kernel.pdf.filespec.PdfFileSpec)"))
(lw-ji:define-java-caller pdfdocument.checkisoconformance
                          "com/itextpdf/kernel/pdf/PdfDocument"
                          "checkIsoConformance"
                          :signatures
                          ("public void checkIsoConformance(java.lang.Object, com.itextpdf.kernel.pdf.IsoKey)"
                           "public void checkIsoConformance(java.lang.Object, com.itextpdf.kernel.pdf.IsoKey, com.itextpdf.kernel.pdf.PdfResources, com.itextpdf.kernel.pdf.PdfStream)"
                           "public void checkIsoConformance(java.lang.Object, com.itextpdf.kernel.pdf.IsoKey, com.itextpdf.kernel.pdf.PdfResources)"))
(lw-ji:define-java-caller pdfdocument.getcatalog
                          "com/itextpdf/kernel/pdf/PdfDocument"
                          "getCatalog"
                          :signatures
                          ("public com.itextpdf.kernel.pdf.PdfCatalog getCatalog()"))
(lw-ji:define-java-caller pdfdocument.close
                          "com/itextpdf/kernel/pdf/PdfDocument"
                          "close"
                          :signatures
                          ("public void close()"))
(lw-ji:define-java-caller pdfdocument.setuserproperties
                          "com/itextpdf/kernel/pdf/PdfDocument"
                          "setUserProperties"
                          :signatures
                          ("public void setUserProperties(boolean)"))
(lw-ji:define-java-caller pdfdocument.getfingerprint
                          "com/itextpdf/kernel/pdf/PdfDocument"
                          "getFingerPrint"
                          :signatures
                          ("public com.itextpdf.kernel.pdf.FingerPrint getFingerPrint()"))
(lw-ji:define-java-caller pdfdocument.removeallhandlers
                          "com/itextpdf/kernel/pdf/PdfDocument"
                          "removeAllHandlers"
                          :signatures
                          ("public void removeAllHandlers()"))
(lw-ji:define-java-caller pdfdocument.getnumberofpdfobjects
                          "com/itextpdf/kernel/pdf/PdfDocument"
                          "getNumberOfPdfObjects"
                          :signatures
                          ("public int getNumberOfPdfObjects()"))
(lw-ji:define-java-caller pdfdocument.getdocumentinfo
                          "com/itextpdf/kernel/pdf/PdfDocument"
                          "getDocumentInfo"
                          :signatures
                          ("public com.itextpdf.kernel.pdf.PdfDocumentInfo getDocumentInfo()"))
(lw-ji:define-java-caller pdfdocument.notifyall
                          "com/itextpdf/kernel/pdf/PdfDocument"
                          "notifyAll"
                          :signatures
                          ("public final void notifyAll()"))
(lw-ji:define-java-caller pdfdocument.haseventhandler
                          "com/itextpdf/kernel/pdf/PdfDocument"
                          "hasEventHandler"
                          :signatures
                          ("public boolean hasEventHandler(java.lang.String)"))
(lw-ji:define-java-caller pdfdocument.flushcopiedobjects
                          "com/itextpdf/kernel/pdf/PdfDocument"
                          "flushCopiedObjects"
                          :signatures
                          ("public void flushCopiedObjects(com.itextpdf.kernel.pdf.PdfDocument)"))
(lw-ji:define-java-caller pdfdocument.getpagelabels
                          "com/itextpdf/kernel/pdf/PdfDocument"
                          "getPageLabels"
                          :signatures
                          ("public java.lang.String[] getPageLabels()"))
(lw-ji:define-java-caller pdfdocument.addpage
                          "com/itextpdf/kernel/pdf/PdfDocument"
                          "addPage"
                          :signatures
                          ("public com.itextpdf.kernel.pdf.PdfPage addPage(com.itextpdf.kernel.pdf.PdfPage)"
                           "public com.itextpdf.kernel.pdf.PdfPage addPage(int, com.itextpdf.kernel.pdf.PdfPage)"))
(lw-ji:define-java-caller pdfdocument.getfirstpage
                          "com/itextpdf/kernel/pdf/PdfDocument"
                          "getFirstPage"
                          :signatures
                          ("public com.itextpdf.kernel.pdf.PdfPage getFirstPage()"))
(lw-ji:define-java-caller pdfdocument.addfileattachment
                          "com/itextpdf/kernel/pdf/PdfDocument"
                          "addFileAttachment"
                          :signatures
                          ("public void addFileAttachment(java.lang.String, com.itextpdf.kernel.pdf.filespec.PdfFileSpec)"))
(lw-ji:define-java-caller pdfdocument.addnameddestination
                          "com/itextpdf/kernel/pdf/PdfDocument"
                          "addNamedDestination"
                          :signatures
                          ("public void addNamedDestination(java.lang.String, com.itextpdf.kernel.pdf.PdfObject)"))
(lw-ji:define-java-caller pdfdocument.addoutputintent
                          "com/itextpdf/kernel/pdf/PdfDocument"
                          "addOutputIntent"
                          :signatures
                          ("public void addOutputIntent(com.itextpdf.kernel.pdf.PdfOutputIntent)"))
(lw-ji:define-java-caller pdfdocument.gettrailer
                          "com/itextpdf/kernel/pdf/PdfDocument"
                          "getTrailer"
                          :signatures
                          ("public com.itextpdf.kernel.pdf.PdfDictionary getTrailer()"))
(lw-ji:define-java-caller pdfdocument.getoriginaldocumentid
                          "com/itextpdf/kernel/pdf/PdfDocument"
                          "getOriginalDocumentId"
                          :signatures
                          ("public com.itextpdf.kernel.pdf.PdfString getOriginalDocumentId()"))
(lw-ji:define-java-caller pdfdocument.addeventhandler
                          "com/itextpdf/kernel/pdf/PdfDocument"
                          "addEventHandler"
                          :signatures
                          ("public void addEventHandler(java.lang.String, com.itextpdf.kernel.events.IEventHandler)"))
(lw-ji:define-java-caller pdfdocument.getstructtreeroot
                          "com/itextpdf/kernel/pdf/PdfDocument"
                          "getStructTreeRoot"
                          :signatures
                          ("public com.itextpdf.kernel.pdf.tagging.PdfStructTreeRoot getStructTreeRoot()"))
(lw-ji:define-java-caller pdfdocument.checkshowtextisoconformance
                          "com/itextpdf/kernel/pdf/PdfDocument"
                          "checkShowTextIsoConformance"
                          :signatures
                          ("public void checkShowTextIsoConformance(com.itextpdf.kernel.pdf.canvas.CanvasGraphicsState, com.itextpdf.kernel.pdf.PdfResources)"))
(lw-ji:define-java-caller pdfdocument.hashcode
                          "com/itextpdf/kernel/pdf/PdfDocument"
                          "hashCode"
                          :signatures
                          ("public int hashCode()"))
(lw-ji:define-java-caller pdfdocument.getwriter
                          "com/itextpdf/kernel/pdf/PdfDocument"
                          "getWriter"
                          :signatures
                          ("public com.itextpdf.kernel.pdf.PdfWriter getWriter()"))
(lw-ji:define-java-caller pdfdocument.dispatchevent
                          "com/itextpdf/kernel/pdf/PdfDocument"
                          "dispatchEvent"
                          :signatures
                          ("public void dispatchEvent(com.itextpdf.kernel.events.Event)"
                           "public void dispatchEvent(com.itextpdf.kernel.events.Event, boolean)"))
(lw-ji:define-java-caller pdfdocument.getpdfversion
                          "com/itextpdf/kernel/pdf/PdfDocument"
                          "getPdfVersion"
                          :signatures
                          ("public com.itextpdf.kernel.pdf.PdfVersion getPdfVersion()"))
(lw-ji:define-java-caller pdfdocument.notify
                          "com/itextpdf/kernel/pdf/PdfDocument"
                          "notify"
                          :signatures
                          ("public final void notify()"))
(lw-ji:define-java-caller pdfdocument.getdefaultfont
                          "com/itextpdf/kernel/pdf/PdfDocument"
                          "getDefaultFont"
                          :signatures
                          ("public com.itextpdf.kernel.font.PdfFont getDefaultFont()"))
(lw-ji:define-java-caller pdfdocument.wait
                          "com/itextpdf/kernel/pdf/PdfDocument"
                          "wait"
                          :signatures
                          ("public final void wait(long)"
                           "public final void wait(long, int)"
                           "public final void wait()"))
(lw-ji:define-java-caller pdfdocument.getpagenumber
                          "com/itextpdf/kernel/pdf/PdfDocument"
                          "getPageNumber"
                          :signatures
                          ("public int getPageNumber(com.itextpdf.kernel.pdf.PdfDictionary)"
                           "public int getPageNumber(com.itextpdf.kernel.pdf.PdfPage)"))
(lw-ji:define-java-caller pdfdocument.getclass
                          "com/itextpdf/kernel/pdf/PdfDocument"
                          "getClass"
                          :signatures
                          ("public final java.lang.Class getClass()"))
(lw-ji:define-java-caller pdfdocument.getpdfobject
                          "com/itextpdf/kernel/pdf/PdfDocument"
                          "getPdfObject"
                          :signatures
                          ("public com.itextpdf.kernel.pdf.PdfObject getPdfObject(int)"))
(lw-ji:define-java-caller pdfdocument.getxmpmetadata
                          "com/itextpdf/kernel/pdf/PdfDocument"
                          "getXmpMetadata"
                          :signatures
                          ("public byte[] getXmpMetadata()"
                           "public byte[] getXmpMetadata(boolean)"))
(lw-ji:define-java-caller pdfdocument.getlastpage
                          "com/itextpdf/kernel/pdf/PdfDocument"
                          "getLastPage"
                          :signatures
                          ("public com.itextpdf.kernel.pdf.PdfPage getLastPage()"))
(lw-ji:define-java-caller pdfdocument.equals
                          "com/itextpdf/kernel/pdf/PdfDocument"
                          "equals"
                          :signatures
                          ("public boolean equals(java.lang.Object)"))
(lw-ji:define-java-caller pdfdocument.createnextindirectreference
                          "com/itextpdf/kernel/pdf/PdfDocument"
                          "createNextIndirectReference"
                          :signatures
                          ("public com.itextpdf.kernel.pdf.PdfIndirectReference createNextIndirectReference()"))
(lw-ji:define-java-caller pdfdocument.addnewpage
                          "com/itextpdf/kernel/pdf/PdfDocument"
                          "addNewPage"
                          :signatures
                          ("public com.itextpdf.kernel.pdf.PdfPage addNewPage(int)"
                           "public com.itextpdf.kernel.pdf.PdfPage addNewPage()"
                           "public com.itextpdf.kernel.pdf.PdfPage addNewPage(int, com.itextpdf.kernel.geom.PageSize)"
                           "public com.itextpdf.kernel.pdf.PdfPage addNewPage(com.itextpdf.kernel.geom.PageSize)"))
(lw-ji:define-java-caller pdfdocument.copypagesto
                          "com/itextpdf/kernel/pdf/PdfDocument"
                          "copyPagesTo"
                          :signatures
                          ("public java.util.List copyPagesTo(java.util.List, com.itextpdf.kernel.pdf.PdfDocument)"
                           "public java.util.List copyPagesTo(java.util.List, com.itextpdf.kernel.pdf.PdfDocument, com.itextpdf.kernel.pdf.IPdfPageExtraCopier)"
                           "public java.util.List copyPagesTo(java.util.List, com.itextpdf.kernel.pdf.PdfDocument, int, com.itextpdf.kernel.pdf.IPdfPageExtraCopier)"
                           "public java.util.List copyPagesTo(int, int, com.itextpdf.kernel.pdf.PdfDocument, int, com.itextpdf.kernel.pdf.IPdfPageExtraCopier)"
                           "public java.util.List copyPagesTo(int, int, com.itextpdf.kernel.pdf.PdfDocument, int)"
                           "public java.util.List copyPagesTo(int, int, com.itextpdf.kernel.pdf.PdfDocument, com.itextpdf.kernel.pdf.IPdfPageExtraCopier)"
                           "public java.util.List copyPagesTo(java.util.List, com.itextpdf.kernel.pdf.PdfDocument, int)"
                           "public java.util.List copyPagesTo(int, int, com.itextpdf.kernel.pdf.PdfDocument)"))
(lw-ji:define-java-caller pdfdocument.hasoutlines
                          "com/itextpdf/kernel/pdf/PdfDocument"
                          "hasOutlines"
                          :signatures
                          ("public boolean hasOutlines()"))
(lw-ji:define-java-caller pdfdocument.getfont
                          "com/itextpdf/kernel/pdf/PdfDocument"
                          "getFont"
                          :signatures
                          ("public com.itextpdf.kernel.font.PdfFont getFont(com.itextpdf.kernel.pdf.PdfDictionary)"))
(lw-ji:define-java-caller pdfdocument.getnumberofpages
                          "com/itextpdf/kernel/pdf/PdfDocument"
                          "getNumberOfPages"
                          :signatures
                          ("public int getNumberOfPages()"))
(lw-ji:define-java-caller pdfdocument.findfont
                          "com/itextpdf/kernel/pdf/PdfDocument"
                          "findFont"
                          :signatures
                          ("public com.itextpdf.kernel.font.PdfFont findFont(java.lang.String, java.lang.String)"))
(lw-ji:define-java-caller pdfdocument.getmodifieddocumentid
                          "com/itextpdf/kernel/pdf/PdfDocument"
                          "getModifiedDocumentId"
                          :signatures
                          ("public com.itextpdf.kernel.pdf.PdfString getModifiedDocumentId()"))
(lw-ji:define-java-caller pdfdocument.getpage
                          "com/itextpdf/kernel/pdf/PdfDocument"
                          "getPage"
                          :signatures
                          ("public com.itextpdf.kernel.pdf.PdfPage getPage(com.itextpdf.kernel.pdf.PdfDictionary)"
                           "public com.itextpdf.kernel.pdf.PdfPage getPage(int)"))
(lw-ji:define-java-caller pdfdocument.getnextstructparentindex
                          "com/itextpdf/kernel/pdf/PdfDocument"
                          "getNextStructParentIndex"
                          :signatures
                          ("public int getNextStructParentIndex()"))
(lw-ji:define-java-caller pdfdocument.isappendmode
                          "com/itextpdf/kernel/pdf/PdfDocument"
                          "isAppendMode"
                          :signatures
                          ("public boolean isAppendMode()"))
(lw-ji:define-java-caller pdfdocument.setencryptedpayload
                          "com/itextpdf/kernel/pdf/PdfDocument"
                          "setEncryptedPayload"
                          :signatures
                          ("public void setEncryptedPayload(com.itextpdf.kernel.pdf.filespec.PdfFileSpec)"))
(lw-ji:define-java-caller pdfdocument.listindirectreferences
                          "com/itextpdf/kernel/pdf/PdfDocument"
                          "listIndirectReferences"
                          :signatures
                          ("public java.util.List listIndirectReferences()"))
(lw-ji:define-java-caller pdfdocument.registerproduct
                          "com/itextpdf/kernel/pdf/PdfDocument"
                          "registerProduct"
                          :signatures
                          ("public boolean registerProduct(com.itextpdf.kernel.ProductInfo)"))
(lw-ji:define-java-caller pdfdocument.setclosereader
                          "com/itextpdf/kernel/pdf/PdfDocument"
                          "setCloseReader"
                          :signatures
                          ("public void setCloseReader(boolean)"))
(lw-ji:define-java-caller pdfdocument.initializeoutlines
                          "com/itextpdf/kernel/pdf/PdfDocument"
                          "initializeOutlines"
                          :signatures
                          ("public void initializeOutlines()"))
(lw-ji:define-java-caller pdfdocument.istagged
                          "com/itextpdf/kernel/pdf/PdfDocument"
                          "isTagged"
                          :signatures
                          ("public boolean isTagged()"))
(defsetf pdfdocument.istagged pdfdocument.settagged)
(lw-ji:define-java-caller pdfdocument.setclosewriter
                          "com/itextpdf/kernel/pdf/PdfDocument"
                          "setCloseWriter"
                          :signatures
                          ("public void setCloseWriter(boolean)"))
(lw-ji:define-java-caller pdfdocument.setflushunusedobjects
                          "com/itextpdf/kernel/pdf/PdfDocument"
                          "setFlushUnusedObjects"
                          :signatures
                          ("public void setFlushUnusedObjects(boolean)"))
(lw-ji:define-java-caller pdfdocument.settagged
                          "com/itextpdf/kernel/pdf/PdfDocument"
                          "setTagged"
                          :signatures
                          ("public com.itextpdf.kernel.pdf.PdfDocument setTagged()"))
(lw-ji:define-java-caller pdfdocument.getoutlines
                          "com/itextpdf/kernel/pdf/PdfDocument"
                          "getOutlines"
                          :signatures
                          ("public com.itextpdf.kernel.pdf.PdfOutline getOutlines(boolean)"))
(lw-ji:define-java-caller pdfdocument.getreader
                          "com/itextpdf/kernel/pdf/PdfDocument"
                          "getReader"
                          :signatures
                          ("public com.itextpdf.kernel.pdf.PdfReader getReader()"))
(lw-ji:define-java-caller pdfdocument.setdefaultpagesize
                          "com/itextpdf/kernel/pdf/PdfDocument"
                          "setDefaultPageSize"
                          :signatures
                          ("public void setDefaultPageSize(com.itextpdf.kernel.geom.PageSize)"))
(lw-ji:define-java-caller pdfdocument.gettagstructurecontext
                          "com/itextpdf/kernel/pdf/PdfDocument"
                          "getTagStructureContext"
                          :signatures
                          ("public com.itextpdf.kernel.pdf.tagutils.TagStructureContext getTagStructureContext()"))
(lw-ji:define-java-caller pdfdocument.removeeventhandler
                          "com/itextpdf/kernel/pdf/PdfDocument"
                          "removeEventHandler"
                          :signatures
                          ("public void removeEventHandler(java.lang.String, com.itextpdf.kernel.events.IEventHandler)"))
(lw-ji:define-java-caller pdfdocument.setxmpmetadata
                          "com/itextpdf/kernel/pdf/PdfDocument"
                          "setXmpMetadata"
                          :signatures
                          ("public void setXmpMetadata(com.itextpdf.kernel.xmp.XMPMeta)"
                           "public void setXmpMetadata(com.itextpdf.kernel.xmp.XMPMeta, com.itextpdf.kernel.xmp.options.SerializeOptions)"))
(lw-ji:define-java-caller pdfdocument.removepage
                          "com/itextpdf/kernel/pdf/PdfDocument"
                          "removePage"
                          :signatures
                          ("public boolean removePage(com.itextpdf.kernel.pdf.PdfPage)"
                           "public void removePage(int)"))
(lw-ji:define-java-caller pdfdocument.getdefaultpagesize
                          "com/itextpdf/kernel/pdf/PdfDocument"
                          "getDefaultPageSize"
                          :signatures
                          ("public com.itextpdf.kernel.geom.PageSize getDefaultPageSize()"))
(lw-ji:define-java-caller pdfdocument.tostring
                          "com/itextpdf/kernel/pdf/PdfDocument"
                          "toString"
                          :signatures
                          ("public java.lang.String toString()"))
(lw-ji:define-java-caller pdfdocument.isclosereader
                          "com/itextpdf/kernel/pdf/PdfDocument"
                          "isCloseReader"
                          :signatures
                          ("public boolean isCloseReader()"))
(defsetf pdfdocument.isclosereader pdfdocument.setclosereader)
(lw-ji:define-java-caller pdfdocument.movepage
                          "com/itextpdf/kernel/pdf/PdfDocument"
                          "movePage"
                          :signatures
                          ("public void movePage(int, int)"
                           "public boolean movePage(com.itextpdf.kernel.pdf.PdfPage, int)"))
(lw-ji:define-java-caller pdfdocument.isclosewriter
                          "com/itextpdf/kernel/pdf/PdfDocument"
                          "isCloseWriter"
                          :signatures
                          ("public boolean isCloseWriter()"))
(defsetf pdfdocument.isclosewriter pdfdocument.setclosewriter)
(lw-ji:define-java-caller pdfdocument.getassociatedfiles
                          "com/itextpdf/kernel/pdf/PdfDocument"
                          "getAssociatedFiles"
                          :signatures
                          ("public com.itextpdf.kernel.pdf.PdfArray getAssociatedFiles()"))
(lw-ji:define-java-caller pdfdocument.isflushunusedobjects
                          "com/itextpdf/kernel/pdf/PdfDocument"
                          "isFlushUnusedObjects"
                          :signatures
                          ("public boolean isFlushUnusedObjects()"))
(defsetf pdfdocument.isflushunusedobjects
         pdfdocument.setflushunusedobjects)
(lw-ji:define-java-caller pdfdocument.addfont
                          "com/itextpdf/kernel/pdf/PdfDocument"
                          "addFont"
                          :signatures
                          ("public com.itextpdf.kernel.font.PdfFont addFont(com.itextpdf.kernel.font.PdfFont)"))

;;; End of class   com.itextpdf.kernel.pdf.PdfDocument 

