;;; -*- Mode : lisp -*-
;;; This file was automatically generated by WRITE-JAVA-CLASS-DEFINITIONS-TO-FILE


;;; Definitions for Java class   com.itextpdf.kernel.pdf.PdfPage 


(eval-when (compile load eval)
  (let ((package-name "com.itextpdf.kernel.pdf"))
    (unless (find-package package-name) (make-package package-name)))
  (lw-ji:intern-and-export-list '("PDFPAGE.ADDASSOCIATEDFILE"
                                  "PDFPAGE.GETFIRSTCONTENTSTREAM"
                                  "PDFPAGE.ADDANNOTATION"
                                  "PDFPAGE.NEWCONTENTSTREAMBEFORE"
                                  "PDFPAGE.GETSTRUCTPARENTINDEX"
                                  "PDFPAGE.CONTAINSANNOTATION"
                                  "PDFPAGE.SETADDITIONALACTION"
                                  "PDFPAGE.NOTIFYALL"
                                  "PDFPAGE.GETARTBOX"
                                  "PDFPAGE.GETTABORDER"
                                  "PDFPAGE.MAKEINDIRECT"
                                  "PDFPAGE.GETPAGESIZEWITHROTATION"
                                  "PDFPAGE.ADDOUTPUTINTENT"
                                  "PDFPAGE.REMOVEANNOTATION"
                                  "PDFPAGE.GETMEDIABOX"
                                  "PDFPAGE.SETTHUMBNAILIMAGE"
                                  "PDFPAGE.COPYASFORMXOBJECT"
                                  "PDFPAGE.GETLASTCONTENTSTREAM"
                                  "PDFPAGE.GETDOCUMENT"
                                  "PDFPAGE.PUT"
                                  "PDFPAGE.HASHCODE"
                                  "PDFPAGE.GETRESOURCES"
                                  "PDFPAGE.NOTIFY"
                                  "PDFPAGE.GETCROPBOX"
                                  "PDFPAGE.GETCONTENTSTREAMCOUNT"
                                  "PDFPAGE.GETCONTENTSTREAM"
                                  "PDFPAGE.SETARTBOX"
                                  "PDFPAGE.WAIT"
                                  "PDFPAGE.SETTABORDER"
                                  "PDFPAGE.GETCLASS"
                                  "PDFPAGE.GETTHUMBNAILIMAGE"
                                  "PDFPAGE.GETPDFOBJECT"
                                  "PDFPAGE.GETXMPMETADATA"
                                  "PDFPAGE.GETNEXTMCID"
                                  "PDFPAGE.EQUALS"
                                  "PDFPAGE.SETCROPBOX"
                                  "PDFPAGE.FLUSH"
                                  "PDFPAGE.SETMEDIABOX"
                                  "PDFPAGE.ISIGNOREPAGEROTATIONFORCONTENT"
                                  "PDFPAGE.COPYTO"
                                  "PDFPAGE.GETBLEEDBOX"
                                  "PDFPAGE.SETPAGELABEL"
                                  "PDFPAGE.GETANNOTSSIZE"
                                  "PDFPAGE.GETCONTENTBYTES"
                                  "PDFPAGE.SETRESOURCES"
                                  "PDFPAGE.ISFLUSHED"
                                  "PDFPAGE.GETSTREAMBYTES"
                                  "PDFPAGE.GETOUTLINES"
                                  "PDFPAGE.ISPAGEROTATIONINVERSEMATRIXWRITTEN"
                                  "PDFPAGE.GETROTATION"
                                  "PDFPAGE.SETIGNOREPAGEROTATIONFORCONTENT"
                                  "PDFPAGE.SETXMPMETADATA"
                                  "PDFPAGE.SETBLEEDBOX"
                                  "PDFPAGE.GETPAGESIZE"
                                  "PDFPAGE.GETANNOTATIONS"
                                  "PDFPAGE.GETTRIMBOX"
                                  "PDFPAGE.TOSTRING"
                                  "PDFPAGE.GETASSOCIATEDFILES"
                                  "PDFPAGE.NEWCONTENTSTREAMAFTER"
                                  "PDFPAGE.SETTRIMBOX"
                                  "PDFPAGE.SETROTATION"
                                  "PDFPAGE.SETPAGEROTATIONINVERSEMATRIXWRITTEN"
                                  "PDFPAGE.SETMODIFIED"
                                  "PDFPAGE.")
                                "com.itextpdf.kernel.pdf"))

(in-package "com.itextpdf.kernel.pdf")
(defconstant pdfpage. "com.itextpdf.kernel.pdf.PdfPage")
(lw-ji:record-java-class-lisp-symbol "com.itextpdf.kernel.pdf.PdfPage"
                                     'pdfpage.)
(lw-ji:define-java-caller pdfpage.addassociatedfile
                          "com/itextpdf/kernel/pdf/PdfPage"
                          "addAssociatedFile"
                          :signatures
                          ("public void addAssociatedFile(com.itextpdf.kernel.pdf.filespec.PdfFileSpec)"
                           "public void addAssociatedFile(java.lang.String, com.itextpdf.kernel.pdf.filespec.PdfFileSpec)"))
(lw-ji:define-java-caller pdfpage.getfirstcontentstream
                          "com/itextpdf/kernel/pdf/PdfPage"
                          "getFirstContentStream"
                          :signatures
                          ("public com.itextpdf.kernel.pdf.PdfStream getFirstContentStream()"))
(lw-ji:define-java-caller pdfpage.addannotation
                          "com/itextpdf/kernel/pdf/PdfPage"
                          "addAnnotation"
                          :signatures
                          ("public com.itextpdf.kernel.pdf.PdfPage addAnnotation(com.itextpdf.kernel.pdf.annot.PdfAnnotation)"
                           "public com.itextpdf.kernel.pdf.PdfPage addAnnotation(int, com.itextpdf.kernel.pdf.annot.PdfAnnotation, boolean)"))
(lw-ji:define-java-caller pdfpage.newcontentstreambefore
                          "com/itextpdf/kernel/pdf/PdfPage"
                          "newContentStreamBefore"
                          :signatures
                          ("public com.itextpdf.kernel.pdf.PdfStream newContentStreamBefore()"))
(lw-ji:define-java-caller pdfpage.getstructparentindex
                          "com/itextpdf/kernel/pdf/PdfPage"
                          "getStructParentIndex"
                          :signatures
                          ("public int getStructParentIndex()"))
(lw-ji:define-java-caller pdfpage.containsannotation
                          "com/itextpdf/kernel/pdf/PdfPage"
                          "containsAnnotation"
                          :signatures
                          ("public boolean containsAnnotation(com.itextpdf.kernel.pdf.annot.PdfAnnotation)"))
(lw-ji:define-java-caller pdfpage.setadditionalaction
                          "com/itextpdf/kernel/pdf/PdfPage"
                          "setAdditionalAction"
                          :signatures
                          ("public com.itextpdf.kernel.pdf.PdfPage setAdditionalAction(com.itextpdf.kernel.pdf.PdfName, com.itextpdf.kernel.pdf.action.PdfAction)"))
(lw-ji:define-java-caller pdfpage.notifyall
                          "com/itextpdf/kernel/pdf/PdfPage"
                          "notifyAll"
                          :signatures
                          ("public final void notifyAll()"))
(lw-ji:define-java-caller pdfpage.getartbox
                          "com/itextpdf/kernel/pdf/PdfPage"
                          "getArtBox"
                          :signatures
                          ("public com.itextpdf.kernel.geom.Rectangle getArtBox()"))
(lw-ji:define-java-caller pdfpage.gettaborder
                          "com/itextpdf/kernel/pdf/PdfPage"
                          "getTabOrder"
                          :signatures
                          ("public com.itextpdf.kernel.pdf.PdfName getTabOrder()"))
(lw-ji:define-java-caller pdfpage.makeindirect
                          "com/itextpdf/kernel/pdf/PdfPage"
                          "makeIndirect"
                          :signatures
                          ("public com.itextpdf.kernel.pdf.PdfObjectWrapper makeIndirect(com.itextpdf.kernel.pdf.PdfDocument)"
                           "public com.itextpdf.kernel.pdf.PdfObjectWrapper makeIndirect(com.itextpdf.kernel.pdf.PdfDocument, com.itextpdf.kernel.pdf.PdfIndirectReference)"))
(lw-ji:define-java-caller pdfpage.getpagesizewithrotation
                          "com/itextpdf/kernel/pdf/PdfPage"
                          "getPageSizeWithRotation"
                          :signatures
                          ("public com.itextpdf.kernel.geom.Rectangle getPageSizeWithRotation()"))
(lw-ji:define-java-caller pdfpage.addoutputintent
                          "com/itextpdf/kernel/pdf/PdfPage"
                          "addOutputIntent"
                          :signatures
                          ("public com.itextpdf.kernel.pdf.PdfPage addOutputIntent(com.itextpdf.kernel.pdf.PdfOutputIntent)"))
(lw-ji:define-java-caller pdfpage.removeannotation
                          "com/itextpdf/kernel/pdf/PdfPage"
                          "removeAnnotation"
                          :signatures
                          ("public com.itextpdf.kernel.pdf.PdfPage removeAnnotation(com.itextpdf.kernel.pdf.annot.PdfAnnotation)"))
(lw-ji:define-java-caller pdfpage.getmediabox
                          "com/itextpdf/kernel/pdf/PdfPage"
                          "getMediaBox"
                          :signatures
                          ("public com.itextpdf.kernel.geom.Rectangle getMediaBox()"))
(lw-ji:define-java-caller pdfpage.setthumbnailimage
                          "com/itextpdf/kernel/pdf/PdfPage"
                          "setThumbnailImage"
                          :signatures
                          ("public com.itextpdf.kernel.pdf.PdfPage setThumbnailImage(com.itextpdf.kernel.pdf.xobject.PdfImageXObject)"))
(lw-ji:define-java-caller pdfpage.copyasformxobject
                          "com/itextpdf/kernel/pdf/PdfPage"
                          "copyAsFormXObject"
                          :signatures
                          ("public com.itextpdf.kernel.pdf.xobject.PdfFormXObject copyAsFormXObject(com.itextpdf.kernel.pdf.PdfDocument)"))
(lw-ji:define-java-caller pdfpage.getlastcontentstream
                          "com/itextpdf/kernel/pdf/PdfPage"
                          "getLastContentStream"
                          :signatures
                          ("public com.itextpdf.kernel.pdf.PdfStream getLastContentStream()"))
(lw-ji:define-java-caller pdfpage.getdocument
                          "com/itextpdf/kernel/pdf/PdfPage"
                          "getDocument"
                          :signatures
                          ("public com.itextpdf.kernel.pdf.PdfDocument getDocument()"))
(lw-ji:define-java-caller pdfpage.put
                          "com/itextpdf/kernel/pdf/PdfPage"
                          "put"
                          :signatures
                          ("public com.itextpdf.kernel.pdf.PdfPage put(com.itextpdf.kernel.pdf.PdfName, com.itextpdf.kernel.pdf.PdfObject)"))
(lw-ji:define-java-caller pdfpage.hashcode
                          "com/itextpdf/kernel/pdf/PdfPage"
                          "hashCode"
                          :signatures
                          ("public int hashCode()"))
(lw-ji:define-java-caller pdfpage.getresources
                          "com/itextpdf/kernel/pdf/PdfPage"
                          "getResources"
                          :signatures
                          ("public com.itextpdf.kernel.pdf.PdfResources getResources()"))
(lw-ji:define-java-caller pdfpage.notify
                          "com/itextpdf/kernel/pdf/PdfPage"
                          "notify"
                          :signatures
                          ("public final void notify()"))
(lw-ji:define-java-caller pdfpage.getcropbox
                          "com/itextpdf/kernel/pdf/PdfPage"
                          "getCropBox"
                          :signatures
                          ("public com.itextpdf.kernel.geom.Rectangle getCropBox()"))
(lw-ji:define-java-caller pdfpage.getcontentstreamcount
                          "com/itextpdf/kernel/pdf/PdfPage"
                          "getContentStreamCount"
                          :signatures
                          ("public int getContentStreamCount()"))
(lw-ji:define-java-caller pdfpage.getcontentstream
                          "com/itextpdf/kernel/pdf/PdfPage"
                          "getContentStream"
                          :signatures
                          ("public com.itextpdf.kernel.pdf.PdfStream getContentStream(int)"))
(lw-ji:define-java-caller pdfpage.setartbox
                          "com/itextpdf/kernel/pdf/PdfPage"
                          "setArtBox"
                          :signatures
                          ("public com.itextpdf.kernel.pdf.PdfPage setArtBox(com.itextpdf.kernel.geom.Rectangle)"))
(lw-ji:define-java-caller pdfpage.wait
                          "com/itextpdf/kernel/pdf/PdfPage"
                          "wait"
                          :signatures
                          ("public final void wait(long)"
                           "public final void wait(long, int)"
                           "public final void wait()"))
(lw-ji:define-java-caller pdfpage.settaborder
                          "com/itextpdf/kernel/pdf/PdfPage"
                          "setTabOrder"
                          :signatures
                          ("public com.itextpdf.kernel.pdf.PdfPage setTabOrder(com.itextpdf.kernel.pdf.PdfName)"))
(lw-ji:define-java-caller pdfpage.getclass
                          "com/itextpdf/kernel/pdf/PdfPage"
                          "getClass"
                          :signatures
                          ("public final java.lang.Class getClass()"))
(lw-ji:define-java-caller pdfpage.getthumbnailimage
                          "com/itextpdf/kernel/pdf/PdfPage"
                          "getThumbnailImage"
                          :signatures
                          ("public com.itextpdf.kernel.pdf.xobject.PdfImageXObject getThumbnailImage()"))
(lw-ji:define-java-caller pdfpage.getpdfobject
                          "com/itextpdf/kernel/pdf/PdfPage"
                          "getPdfObject"
                          :signatures
                          ("public com.itextpdf.kernel.pdf.PdfObject getPdfObject()"))
(lw-ji:define-java-caller pdfpage.getxmpmetadata
                          "com/itextpdf/kernel/pdf/PdfPage"
                          "getXmpMetadata"
                          :signatures
                          ("public com.itextpdf.kernel.pdf.PdfStream getXmpMetadata()"))
(lw-ji:define-java-caller pdfpage.getnextmcid
                          "com/itextpdf/kernel/pdf/PdfPage"
                          "getNextMcid"
                          :signatures
                          ("public int getNextMcid()"))
(lw-ji:define-java-caller pdfpage.equals
                          "com/itextpdf/kernel/pdf/PdfPage"
                          "equals"
                          :signatures
                          ("public boolean equals(java.lang.Object)"))
(lw-ji:define-java-caller pdfpage.setcropbox
                          "com/itextpdf/kernel/pdf/PdfPage"
                          "setCropBox"
                          :signatures
                          ("public com.itextpdf.kernel.pdf.PdfPage setCropBox(com.itextpdf.kernel.geom.Rectangle)"))
(lw-ji:define-java-caller pdfpage.flush
                          "com/itextpdf/kernel/pdf/PdfPage"
                          "flush"
                          :signatures
                          ("public void flush()"
                           "public void flush(boolean)"))
(lw-ji:define-java-caller pdfpage.setmediabox
                          "com/itextpdf/kernel/pdf/PdfPage"
                          "setMediaBox"
                          :signatures
                          ("public com.itextpdf.kernel.pdf.PdfPage setMediaBox(com.itextpdf.kernel.geom.Rectangle)"))
(lw-ji:define-java-caller pdfpage.isignorepagerotationforcontent
                          "com/itextpdf/kernel/pdf/PdfPage"
                          "isIgnorePageRotationForContent"
                          :signatures
                          ("public boolean isIgnorePageRotationForContent()"))
(defsetf pdfpage.isignorepagerotationforcontent
         pdfpage.setignorepagerotationforcontent)
(lw-ji:define-java-caller pdfpage.copyto
                          "com/itextpdf/kernel/pdf/PdfPage"
                          "copyTo"
                          :signatures
                          ("public com.itextpdf.kernel.pdf.PdfPage copyTo(com.itextpdf.kernel.pdf.PdfDocument, com.itextpdf.kernel.pdf.IPdfPageExtraCopier)"
                           "public com.itextpdf.kernel.pdf.PdfPage copyTo(com.itextpdf.kernel.pdf.PdfDocument)"))
(lw-ji:define-java-caller pdfpage.getbleedbox
                          "com/itextpdf/kernel/pdf/PdfPage"
                          "getBleedBox"
                          :signatures
                          ("public com.itextpdf.kernel.geom.Rectangle getBleedBox()"))
(lw-ji:define-java-caller pdfpage.setpagelabel
                          "com/itextpdf/kernel/pdf/PdfPage"
                          "setPageLabel"
                          :signatures
                          ("public com.itextpdf.kernel.pdf.PdfPage setPageLabel(com.itextpdf.kernel.pdf.PageLabelNumberingStyle, java.lang.String, int)"
                           "public com.itextpdf.kernel.pdf.PdfPage setPageLabel(com.itextpdf.kernel.pdf.PageLabelNumberingStyle, java.lang.String)"))
(lw-ji:define-java-caller pdfpage.getannotssize
                          "com/itextpdf/kernel/pdf/PdfPage"
                          "getAnnotsSize"
                          :signatures
                          ("public int getAnnotsSize()"))
(lw-ji:define-java-caller pdfpage.getcontentbytes
                          "com/itextpdf/kernel/pdf/PdfPage"
                          "getContentBytes"
                          :signatures
                          ("public byte[] getContentBytes()"))
(lw-ji:define-java-caller pdfpage.setresources
                          "com/itextpdf/kernel/pdf/PdfPage"
                          "setResources"
                          :signatures
                          ("public com.itextpdf.kernel.pdf.PdfPage setResources(com.itextpdf.kernel.pdf.PdfResources)"))
(lw-ji:define-java-caller pdfpage.isflushed
                          "com/itextpdf/kernel/pdf/PdfPage"
                          "isFlushed"
                          :signatures
                          ("public boolean isFlushed()"))
(lw-ji:define-java-caller pdfpage.getstreambytes
                          "com/itextpdf/kernel/pdf/PdfPage"
                          "getStreamBytes"
                          :signatures
                          ("public byte[] getStreamBytes(int)"))
(lw-ji:define-java-caller pdfpage.getoutlines
                          "com/itextpdf/kernel/pdf/PdfPage"
                          "getOutlines"
                          :signatures
                          ("public java.util.List getOutlines(boolean)"))
(lw-ji:define-java-caller pdfpage.ispagerotationinversematrixwritten
                          "com/itextpdf/kernel/pdf/PdfPage"
                          "isPageRotationInverseMatrixWritten"
                          :signatures
                          ("public boolean isPageRotationInverseMatrixWritten()"))
(defsetf pdfpage.ispagerotationinversematrixwritten
         pdfpage.setpagerotationinversematrixwritten)
(lw-ji:define-java-caller pdfpage.getrotation
                          "com/itextpdf/kernel/pdf/PdfPage"
                          "getRotation"
                          :signatures
                          ("public int getRotation()"))
(lw-ji:define-java-caller pdfpage.setignorepagerotationforcontent
                          "com/itextpdf/kernel/pdf/PdfPage"
                          "setIgnorePageRotationForContent"
                          :signatures
                          ("public com.itextpdf.kernel.pdf.PdfPage setIgnorePageRotationForContent(boolean)"))
(lw-ji:define-java-caller pdfpage.setxmpmetadata
                          "com/itextpdf/kernel/pdf/PdfPage"
                          "setXmpMetadata"
                          :signatures
                          ("public com.itextpdf.kernel.pdf.PdfPage setXmpMetadata(com.itextpdf.kernel.xmp.XMPMeta)"
                           "public com.itextpdf.kernel.pdf.PdfPage setXmpMetadata(com.itextpdf.kernel.xmp.XMPMeta, com.itextpdf.kernel.xmp.options.SerializeOptions)"
                           "public com.itextpdf.kernel.pdf.PdfPage setXmpMetadata(byte[])"))
(lw-ji:define-java-caller pdfpage.setbleedbox
                          "com/itextpdf/kernel/pdf/PdfPage"
                          "setBleedBox"
                          :signatures
                          ("public com.itextpdf.kernel.pdf.PdfPage setBleedBox(com.itextpdf.kernel.geom.Rectangle)"))
(lw-ji:define-java-caller pdfpage.getpagesize
                          "com/itextpdf/kernel/pdf/PdfPage"
                          "getPageSize"
                          :signatures
                          ("public com.itextpdf.kernel.geom.Rectangle getPageSize()"))
(lw-ji:define-java-caller pdfpage.getannotations
                          "com/itextpdf/kernel/pdf/PdfPage"
                          "getAnnotations"
                          :signatures
                          ("public java.util.List getAnnotations()"))
(lw-ji:define-java-caller pdfpage.gettrimbox
                          "com/itextpdf/kernel/pdf/PdfPage"
                          "getTrimBox"
                          :signatures
                          ("public com.itextpdf.kernel.geom.Rectangle getTrimBox()"))
(lw-ji:define-java-caller pdfpage.tostring
                          "com/itextpdf/kernel/pdf/PdfPage"
                          "toString"
                          :signatures
                          ("public java.lang.String toString()"))
(lw-ji:define-java-caller pdfpage.getassociatedfiles
                          "com/itextpdf/kernel/pdf/PdfPage"
                          "getAssociatedFiles"
                          :signatures
                          ("public com.itextpdf.kernel.pdf.PdfArray getAssociatedFiles(boolean)"))
(lw-ji:define-java-caller pdfpage.newcontentstreamafter
                          "com/itextpdf/kernel/pdf/PdfPage"
                          "newContentStreamAfter"
                          :signatures
                          ("public com.itextpdf.kernel.pdf.PdfStream newContentStreamAfter()"))
(lw-ji:define-java-caller pdfpage.settrimbox
                          "com/itextpdf/kernel/pdf/PdfPage"
                          "setTrimBox"
                          :signatures
                          ("public com.itextpdf.kernel.pdf.PdfPage setTrimBox(com.itextpdf.kernel.geom.Rectangle)"))
(lw-ji:define-java-caller pdfpage.setrotation
                          "com/itextpdf/kernel/pdf/PdfPage"
                          "setRotation"
                          :signatures
                          ("public com.itextpdf.kernel.pdf.PdfPage setRotation(int)"))
(lw-ji:define-java-caller pdfpage.setpagerotationinversematrixwritten
                          "com/itextpdf/kernel/pdf/PdfPage"
                          "setPageRotationInverseMatrixWritten"
                          :signatures
                          ("public void setPageRotationInverseMatrixWritten()"))
(lw-ji:define-java-caller pdfpage.setmodified
                          "com/itextpdf/kernel/pdf/PdfPage"
                          "setModified"
                          :signatures
                          ("public com.itextpdf.kernel.pdf.PdfObjectWrapper setModified()"))

;;; End of class   com.itextpdf.kernel.pdf.PdfPage 

